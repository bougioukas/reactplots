---
title: "What is this website about?"
---


```{r}
#| include: false

library(paletteer)
library(gganimate)

library(tidyverse)
library(here)
```


```{r covid_data}
#| include: false

library(readr)
covid_data <- read_csv("data/covid_data.csv", col_types = cols(date = col_date(format = "%m/%d/%Y")))


dat <- covid_data %>%
  filter(date == "2021-06-12", population > 1000000) %>%
  mutate(cases_per_100k = confirmed / population * 100000,
         tests_per_capita = total_tests / population)

focus_cn <- c("CHN", "GBR", "USA", "JPN", "GRC", "MEX",
              "KOR", "ITA", "ESP", "BRA", "IND")

covid_deaths <- covid_data |> 
  select(date, iso3c, deaths) |> 
  group_by(iso3c) |> 
  arrange(date) |> 
  filter(deaths > 10) |> 
  mutate(days_elapsed = date - min(date),
         end_label = ifelse(date == max(date), iso3c, NA),
         end_label = case_when(iso3c %in% focus_cn ~ end_label,
                      TRUE ~ NA_character_),
         cgroup = case_when(iso3c %in% focus_cn ~ iso3c,
                   TRUE ~ "OTHER")) |>  
  ungroup()


## Colors
cgroup_cols <- c(prismatic::clr_darken(
  paletteer_d("ggsci::category20_d3"), 0.2)[1:length(focus_cn)],
  "gray70")

```




::: {.grid}

::: {.g-col-12 .g-col-md-6}

```{r}
#| echo: false
#| warning: false
#| message: false
#| out-width: "90%"
#| fig-align: "left"

animate1 <- covid_deaths |>  
  filter(iso3c %in% focus_cn) |>  
  ggplot(mapping = aes(x = date, y = deaths, group= iso3c, 
                       color = iso3c)) +
  geom_path(linewidth = 1) +
  geom_point() +
  geom_text(aes(label = iso3c), size = 5) +
  scale_y_continuous(labels = scales::comma_format(accuracy = 1),
                       limits = c(10, 2^20),
                       breaks = 2^seq(4, 20),
                       trans = "log2") +
  scale_color_manual(values = cgroup_cols) +
  labs(title = "Date: {round(frame_along, 0)}", 
       x = 'Calendar time', 
       y = 'Cumulative Number of Deaths (log2 scale)') +
  theme_minimal() +
  theme(legend.position = "none") +
  transition_reveal(date) 

animate1

#mygif <- animate(animate1, width=1600, height=800, renderer=gifski_renderer(loop=FALSE))  
#anim_save(filename="img/animate1.gif", mygif)
```

:::




::: {.g-col-12 .g-col-md-6}

## <span style="color:orange;">R</span> INT<span style="color:orange;">E</span>R<span style="color:orange;">ACT</span>IVE <span style="color:orange;">PLOTS</span>

This platform supports diverse types of visualizations, ranging from basic, interactive or animated plots like scatterplots to more sophisticated graphs such as networks, heatmaps or advanced interconnected plots. 


:::
  
:::



![](img/pic1.png){style="float: right; margin-right: 20px;" fig-align="left" width="100"}


**THE MAIN IDEA:** Interactive data visualizations have become increasingly important in data science, analytics, and research. They provide dynamic ways to explore and communicate data, allowing users to interact with graphical representations, such as zooming, filtering, and adjusting parameters in real time. In recent years, the R programming language has become one of the leading environments for data analysis and visualization, primarily due to its rich ecosystem of libraries like ggplot2, plotly, shiny, leaflet, gganimate, and dygraphs.


:::{#me}

<br>

## Why R for interactive data visualization?

Choosing R for data visualization offers several compelling reasons:

- R is **open source** and freely available, making it accessible to a broad of users.

-  R, with packages like `{plotly}` and `{Shiny}`, supports the creation of **interactive** visualizations.

- R has a vibrant and active **user community**, including statisticians, data scientists, and methodologists.

:::

